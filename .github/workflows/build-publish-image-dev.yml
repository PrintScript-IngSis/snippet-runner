name: Build and Publish Docker Image to GCR

on:
  push:
    branches:
      - dev


env:
  REGISTRY: ghcr.io
  PROJECT_ID: ${{ github.repository }}
  USERNAME: ${{ secrets.PUBLISH_USER }}
  TOKEN: ${{ secrets.PUBLISH_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'oracle'
          java-version: 21
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew clean build

  publish-image:
    needs: build
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.PUBLISH_USER }}
          password: ${{ secrets.PUBLISH_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: "${{ env.REGISTRY }}/${{ env.PROJECT_ID }}"

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          build-args: |
            USERNAME=${{ secrets.PUBLISH_USER }}
            TOKEN=${{ secrets.PUBLISH_TOKEN }}

  pull-repo-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: execute ssh commands
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEV_VM_HOST }}
          username: ${{ secrets.DEV_VM_USERNAME }}
          key: ${{ secrets.DEV_VM_PRIVATE_KEY }}
          port: ${{ secrets.DEV_VM_PORT }}
          script: |
            cd app/snippet-infra
            sudo git checkout dev
            sudo git pull
            sudo docker-compose down
            sudo docker-compose pull
            sudo docker-compose up -d
